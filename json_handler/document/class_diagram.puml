@startuml
skinparam classAttributeIconSize 0

class ProcessTestCase {
  - log_manager: LogManager
  - alog
  + get_test_case_list(): List<str>
  + test_case_processor(): void
}

class TestCaseValidator {
  + validate_test_case_data(data, test_case_id): Tuple<bool, str>
  + validate_test_case_group(data): bool
}

class BaseValidator {
  + validate_is_dict(data, name): bool
  + validate_has_list(data, list_name, name): bool
  + validate_list_not_empty(data, list_name, name): bool
}

class CommandProcessor {
  - log_manager: LogManager
  - tlog
  + process_command_with_validation(command): Tuple<bool, str>
  + expand_and_process_command(command): Tuple<bool, str>
}

class ScreenRecorder {
  + start_recording(): void
  + stop_recording(): void
}

class ApplicationManager {
  + get_driver_instance_by_base_path(base_path): Any
}

class LogManager {
  + get_instance(): LogManager
  + get_application_logger()
  + get_test_case_logger()
  + initialize_test_case_logger(path, id, filename)
}

class Helper {
  + load_test_case_data(test_case_id): Dict
  + load_json(file_path): Dict
}

class Handler {
  + process_test_case(test_case_id, log_path): Tuple<bool, str>
  + setup_video_recording(commands, test_case_id, log_path): Dict
  + stop_video_recording(recorders): void
}

class CommonCommand {
  + expand_common_commands(commands: List<Dict>): List<Dict>
}

ProcessTestCase --> TestCaseValidator
ProcessTestCase --> Handler : uses
Handler --> CommandProcessor
Handler --> CommonCommand
Handler --> ScreenRecorder
Handler --> ApplicationManager
CommandProcessor --> CommonCommand
CommandProcessor --> Handler : uses
TestCaseValidator --|> BaseValidator
Handler --> Helper
Helper --> LogManager
CommonCommand --> Helper
@enduml
